/* -*- c -*- */

header {
##include "lptree/lptnspecint.h"
##include <string.h>
}

data { LptNSpec *nspec; }

setup
{
  l_trash_push();
  data->nspec = lpt_nspec_int_new("test", -5, 7, 2);
}

teardown
{
  L_OBJECT_CLEAR(data->nspec);
  l_trash_pop();
}

test {
  PIF_CHECK(data->nspec);
  PIF_CHECK(lpt_nspec_get_id(data->nspec)); /* ?? */
  PIF_CHECK_EQ_PTR(lpt_nspec_get_value_type(data->nspec), L_CLASS_INT);
  PIF_CHECK(!strcmp(data->nspec->name, "test"));
  PIF_CHECK(LPT_NSPEC_INT(data->nspec)->mini == -5);
  PIF_CHECK(LPT_NSPEC_INT(data->nspec)->maxi == 7);
  PIF_CHECK(LPT_NSPEC_INT(data->nspec)->defo == 2);
}

test get_state
{
  LObject *state = L_TRASH_OBJECT
    (l_object_get_state(L_OBJECT(data->nspec)));
  LptNSpec *nspec2 = L_TRASH_OBJECT
    (l_object_new_from_state(LPT_CLASS_NSPEC_INT, state));
  PIF_CHECK(nspec2);
  PIF_CHECK(LPT_IS_NSPEC_INT(nspec2));
  PIF_CHECK_EQ_STR(nspec2->name, "test");
  PIF_CHECK_EQ(LPT_NSPEC_INT(nspec2)->mini, -5);
  PIF_CHECK_EQ(LPT_NSPEC_INT(nspec2)->maxi, 7);
  PIF_CHECK_EQ(LPT_NSPEC_INT(nspec2)->defo, 2);
}
