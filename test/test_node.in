/* -*- c -*- */

header {
##include "lptree/lptnspecint.h"
##include "lptree/lptnspecdir.h"
##include "lptree/lptnode.h"
}

unit /* node-int */
{
  data {
    LptNSpec *ns_int, *ns_dir;
    LptNode *node;
  }

  setup {
    l_trash_push();
    data->ns_int = L_TRASH_OBJECT
      (lpt_nspec_int_new("INT", -10, 10, 2));
    data->ns_dir = L_TRASH_OBJECT
      (lpt_nspec_dir_new("DIR"));
    data->node = lpt_node_new(data->ns_int);
  }

  teardown {
    L_OBJECT_CLEAR(data->node);
    l_trash_pop();
  }

  test { 
    PIF_CHECK(data->node);
  }

  test {
    LObject *val;
    val = L_OBJECT(l_int_new(42));
    lpt_node_set_value(data->node, val);
    L_OBJECT_CLEAR(val);
    val = lpt_node_get_value(data->node);
    PIF_CHECK(L_IS_INT(val));
    PIF_CHECK(L_INT_VALUE(val) == 42);
    L_OBJECT_CLEAR(val);
  }

  test add
  {
    LptNode *ndir = lpt_node_new(data->ns_dir);
    LptNode *nchild = lpt_node_new(data->ns_int);
    LObject *key = L_TRASH_OBJECT(l_string_new("child1", -1));
    lpt_node_add(ndir, nchild, key);
    PIF_CHECK_EQ_PTR(lpt_node_get_child(ndir, key), nchild);
    L_OBJECT_CLEAR(nchild);
    L_OBJECT_CLEAR(ndir);
  }
}
